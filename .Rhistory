scale_colour_manual(rgb(0,1,0)) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(50) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
scale_colour_manual(rgb(1,1,0)) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(50) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
scale_fill_manual(rgb(1,1,0)) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(50) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
scale_fill_manual("blue") +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(50) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
scale_fill_manual("blue") +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(50) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
scale_fill_manual("red") +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(60) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
scale_fill_manual("red") +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
mymatrix %>%
select(id, sentimento, ncomentarios) %>%
group_by(id, sentimento, ncomentarios) %>%
arrange(sentimento, ncomentarios) %>%
filter(ncomentarios > 100) %>%
tail(60) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento))) +
scale_fill_manual("red") +
xlab("") + ylab("Sentimento dos Posts") +
geom_text( aes(x=reorder(as.character(id),as.numeric(sentimento)),y=as.numeric(sentimento), label = signif(as.numeric(sentimento),2) ) , vjust = 0, hjust = 0, size = 3 ) +
coord_flip()
runApp()
mymatrix
mymatrix$sentimento
summary(mymatrix$sentimento)
referencias <- as.numeric(summary(mymatrix$sentimento))
referencias
which(mymatrix$sentimento == referencias[1])
which(mymatrix$sentimento == referencias[2])
which(mymatrix$sentimento == referencias[3])
which(mymatrix$sentimento == referencias[4])
which(mymatrix$sentimento == referencias[5])
which(mymatrix$sentimento == referencias[6])
referencias <- referencias[-c(4,5)]
referencias
referencias <- as.numeric(summary(mymatrix$sentimento))[-c(4,5)]
referencias
plot(-10:10,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
for(isent in referencias){
text(x = 3, y=10*signif(isent,2), labels = paste(intToUtf8(9664),signif(isent,2)),pos = 4)
}
which(mymatrix$sentimento==referencias)
mymatrix$sentimento
which(mymatrix$sentimento==referencias[1])
which(mymatrix$sentimento==referencias[2])
which(mymatrix$sentimento==referencias[23])
which(mymatrix$sentimento==referencias[3])
which(mymatrix$sentimento==referencias[4])
which(mymatrix$sentimento==referencias[4])[1]
posReferenciasSentimento <- c(which(mymatrix$sentimento==referencias[1])[1],
which(mymatrix$sentimento==referencias[2])[1],
which(mymatrix$sentimento==referencias[3])[1],
which(mymatrix$sentimento==referencias[4])[1]
)
posReferenciasSentimento
is <- 1
idpostsent <- mymatrix$id[posReferenciasSentimento[is]]
referencias <- as.numeric(summary(mymatrix$sentimento))[-c(4,5)]
plot(-10:10,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$sentimento==referencias[1])[1],
which(mymatrix$sentimento==referencias[2])[1],
which(mymatrix$sentimento==referencias[3])[1],
which(mymatrix$sentimento==referencias[4])[1]
)
for(is in 1:length(referencias)){
isent <- referencias[is]
idpostsent <- mymatrix$id[posReferenciasSentimento[is]]
text(x = 3, y=10*signif(isent,2), labels = paste(intToUtf8(9664),signif(isent,2)),pos = 4)
text(x = 10, y=10*signif(isent,2), labels = idpostsent,pos = 4)
}
is%%2
referencias <- as.numeric(summary(mymatrix$sentimento))[-c(4,5)]
plot(-10:10,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$sentimento==referencias[1])[1],
which(mymatrix$sentimento==referencias[2])[1],
which(mymatrix$sentimento==referencias[3])[1],
which(mymatrix$sentimento==referencias[4])[1]
)
for(is in 1:length(referencias)){
isent <- referencias[is]
idpostsent <- mymatrix$id[posReferenciasSentimento[is]]
text(x = 3, y=10*signif(isent,2), labels = paste(intToUtf8(9664),signif(isent,2)),pos = 4)
text(x = 10*((is%%2)+1), y=10*signif(isent,2), labels = idpostsent,pos = 4)
}
referencias <- as.numeric(summary(mymatrix$sentimento))[-c(4,5)]
plot(-10:10,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$sentimento==referencias[1])[1],
which(mymatrix$sentimento==referencias[2])[1],
which(mymatrix$sentimento==referencias[3])[1],
which(mymatrix$sentimento==referencias[4])[1]
)
for(is in 1:length(referencias)){
isent <- referencias[is]
idpostsent <- mymatrix$id[posReferenciasSentimento[is]]
text(x = 3, y=10*signif(isent,2), labels = paste(intToUtf8(9664),signif(isent,2)),pos = 4)
text(x = 7*((is%%2)+1), y=10*signif(isent,2), labels = idpostsent,pos = 4)
}
mymatrix[,1]
mymatrix[1,]
mymatrix %>% arrange(sentimento, ncomentarios)
mymatrix %>% reorder(sentimento, ncomentarios)
mymatrix %>% arrange(sentimento, ncomentarios)
mymatrix %>% arrange(sentimento, ncomentarios)[last]
mymatrix %>% arrange(sentimento, ncomentarios) %>% tail()
mymatrix %>% arrange(sentimento, ncomentarios) %>% tail(1)
mymatrix %>% arrange(sentimento, ncomentarios) %>% tail(1) %>% select(id)
referencias <- c(mymatrix %>% arrange(sentimento, ncomentarios) %>% tail(1) %>% select(id), mymatrix %>% arrange(sentimento, ncomentarios) %>% head(1) %>% select(id))
referencias
posReferenciasSentimento <- c(which(mymatrix$sentimento==referencias[1])[1],
which(mymatrix$sentimento==referencias[2])[1]
)
posReferenciasSentimento
posReferenciasSentimento <- c(which(mymatrix$sentimento==unlist(referencias)[1]),
which(mymatrix$sentimento==unlist(referencias)[2])
)
posReferenciasSentimento
c(which(mymatrix$sentimento==unlist(referencias)[1]),
which(mymatrix$sentimento==unlist(referencias)[2])
)
posReferenciasSentimento
posReferenciasSentimento <- c(which(mymatrix$id==unlist(referencias)[1]),
which(mymatrix$id==unlist(referencias)[2])
)
posReferenciasSentimento
referencias <- c(mymatrix %>% arrange(sentimento, ncomentarios) %>% tail(1) %>% select(id), mymatrix %>% arrange(sentimento, ncomentarios) %>% head(1) %>% select(id))
plot(-10:10,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$id==unlist(referencias)[1]),
which(mymatrix$id==unlist(referencias)[2])
)
for(is in posReferenciasSentimento){
isent <- mymatrix$sentimento[is]
idpostsent <- mymatrix$id[is]
text(x = 3, y=10*signif(isent,2), labels = paste(intToUtf8(9664),signif(isent,2)),pos = 4)
text(x = 7*((is%%2)+1), y=10*signif(isent,2), labels = idpostsent,pos = 4)
}
runApp()
mymatrix
ggplot(mymatrix) +
geom_bar(stat="identity", aes(x = as.numeric(sentimento), y = as.numeric(ncomentarios))
ggplot(mymatrix) +
geom_bar(stat="identity", aes(x = as.numeric(sentimento), y = as.numeric(ncomentarios)))
ggplot(mymatrix) +
geom_bar(stat="identity", aes(x = as.numeric(sentimento), y = as.numeric(ncomentarios))) +
xlab("Índice de Sentimento") +
ylab("Número de Comentários")
mymatrix %>% group_by(sentimento, ncomentarios)
mymatrix %>% group_by(sentimento, ncomentarios) %>% arrange(sentimento, ncomentarios)
mymatrix %>% group_by(sentimento, ncomentarios) %>% arrange(sentimento, ncomentarios) %>% summarise(n = n())
mymatrix %>% group_by(sentimento, ncomentarios) %>% arrange(sentimento, ncomentarios) %>% summarise(n = n()) %>% tail(4)
ggplot(mymatrix) +
geom_bar(stat="identity", aes(x = as.numeric(sentimento), y = as.numeric(ncomentarios))) +
xlab("Índice de Sentimento") +
ylab("Número de Comentários")
ggplot(mymatrix) +
geom_bar(stat="identity", aes(x = as.numeric(sentimento), y = as.numeric(ncomentarios))) +
xlab("Índice de Sentimento") +
ylab("Número de Comentários")
mymatrix$sentimento
ggplot() +
geom_bar(stat="identity", aes(x = as.numeric(mymatrix$sentimento), y = as.numeric(mymatrix$ncomentarios))) +
xlab("Índice de Sentimento") +
ylab("Número de Comentários")
barplot(x = mymatrix$sentimento, y = mymatrix$ncomentarios)
barplot(y = mymatrix$ncomentarios)
barplot(mymatrix$ncomentarios)
?barplot
?plot
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios)
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios, xlim=c(-1,1))
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios, xlim=c(-1,1), type="h")
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios, xlim=c(-1,1), type="h", xlab="sentimentos", ylab="comentários")
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios, xlim=c(-1,1), type="h", xlab="sentimentos", ylab="posts")
plot(x = mymatrix$sentimento, y = mymatrix$ncomentarios, xlim=c(-1,1), type="h", xlab="sentimentos", ylab="comentários")
library(shiny)
library(plotrix)
library(stringr)
library(quanteda)
library(readtext)
library(tm)
library(stringr)
library(dplyr)
library(wordcloud)
library(scales)
library(raster)
library(jpeg)
library(shiny)
library(ggplot2)
library(xlsx)
library(gdata)
library(readxl)
library(tidyverse)
library(shinydashboard)
library(shiny)
library(tidyverse)
library(shinyFiles)
library(devtools)
library(Rfacebook)
library(tm)
library(wordcloud)
library(stylo)
library(tidytext)
library(lubridate)
runApp()
file <- read_xlsx("/home/cdesantana/DataSCOUT/Objectiva/BadogueSentimentos/ruicosta.xlsx")
badwords <- c("scontent.xx.fbcdn.net","https","oh","oe","pra","v","como","para","de","do","da","das","dos","isso","esse","nisso","nesse","aquele","nesses","aqueles","aquela","aquelas","que","q","é","sr","governador","rui","costa","senhor")
getScreenshot <- function(link1, filename1){
workdir <- "figures_badogue"
if(file.exists(workdir)){
resolution <- "800x600"
outputfile1 <- file.path(workdir,filename1)
command1 = paste("pageres ", link1, " ", resolution, " --format='jpg' --verbose --hide='.page-header' --filename=",outputfile1,sep="")
if(length(system(paste("ls ",outputfile1),intern=TRUE))==0){
system(command1)
}else{
system(paste("sudo rm ",workdir,"/",outputfile1,sep=""))
system(command1)
}
}
}
fa <- function(x) iconv(x, to = "ASCII//TRANSLIT")
getMatrizDeOcorrencias <- function(text){
text <- stringi::stri_trans_tolower(text)
temp <- fa(text)
# Lowercase
# Shrink down to just one white space
temp <- stringr::str_replace_all(temp,"[\\s]+", " ")
temp=str_replace_all(temp,"[^[:graph:]]", " ")
# Split it
any(grepl("I_WAS_NOT_ASCII", iconv(temp, "latin1", "ASCII", sub="I_WAS_NOT_ASCII")))
temp <- stringi::stri_trans_general(temp, "latin-ascii")
temp <- removePunctuation(temp)
temp <- unlist(stringr::str_split(temp, " "))
# Get rid of trailing "" if necessary
indexes <- which(temp == "")
if(length(indexes) > 0){
temp <- temp[-indexes]
}
docs <- Corpus(VectorSource(temp))
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("portuguese"))
# Remove your own stop word
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2","que","ser","pelo","tem","o","lhe","por","pra","de","da","do","essa","esse","isso","aquele","aquilo","desse","disso","daquilo","uma","um","NA"))
#  Remove punctuations
docs <- tm_map(docs, stripWhitespace)
#
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
return(d)
}
getIndiceDeSentimento <- function(polaridade){
sentimentos <- toupper(polaridade)
allsentimentos <- c("NEUTRO","NEGATIVO","POSITIVO");
mn <- length(which(sentimentos==allsentimentos[1]));#Neutro
mr <- length(which(sentimentos==allsentimentos[2]));#Negativo
mp <- length(which(sentimentos==allsentimentos[3]));#Positivo
mt <- mr + mn + mp;#Total
indicesentimento <- ifelse(mn == mt, 0, as.numeric((mp-mr)/(mt-mn)))
return(indicesentimento)
}
getPositionY <- function(test){
labelpos <- array(NA,length(test$Polaridade))
labelpos[ which(test$Polaridade == "POSITIVO") ] <- "0.02"
labelpos[ which(test$Polaridade == "NEGATIVO") ] <- "0.98"
datasb <- test$Data[which(test$Polaridade == "NEUTRO")];
posvarb <- which(test$Polaridade == "NEUTRO");
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(test$Data == datasb_ & test$Polaridade == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, test$freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 0.02
}
return(as.numeric(labelpos))
}
getDFMatrix <- function(text){
myCorpus <- corpus(text)
metadoc(myCorpus, "language") <- "portuguese"
tokenInfo <- summary(myCorpus)
kwic(myCorpus, "gestor")
myStemMat <- dfm(myCorpus, remove = stopwords("portuguese"), stem = TRUE, remove_punct = TRUE)
mydfm <- dfm(myCorpus, remove = c(stopwords("portuguese"),badwords), remove_punct = TRUE, remove_numbers= TRUE)
return(mydfm)
#   ap_td <- tidy(mydfm)
#   names(ap_td) <- c("sentimento","term","count")
#   return(ap_td);
}
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
idPostsData <- file$`ID do Post`
uniqueIdsPostsData <- unique(sort(idPostsData))
mymatrix <- list();
uniqueIdsPostsData
for(iposts in 1:length(uniqueIdsPostsData)){
idPost <- uniqueIdsPostsData[iposts]
posPosts <- which(file$`ID do Post` == idPost)
link <- as.character(file$Link)[posPosts][1]
polaridadePostData <- file$Polaridade[posPosts]
if(length(polaridadePostData) >= 5){
sentimento <- getIndiceDeSentimento(polaridadePostData);
cat(paste(idPost,sentimento,length(polaridadePostData),link,sep=" "),sep="\n");
mymatrix <- rbind(mymatrix,cbind(as.character(idPost),sentimento, length(polaridadePostData), as.character(link)))
}
}
mymatrix <- data.frame(mymatrix)
colnames(mymatrix) <- c("id","sentimento","ncomentarios","links")
mymatrix$id <- unlist(mymatrix$id)
mymatrix$sentimento <- as.numeric(unlist(mymatrix$sentimento))
mymatrix$ncomentarios <- as.numeric(unlist(mymatrix$ncomentarios))
mymatrix$links <- as.character(unlist(mymatrix$links))
mymatrix
plot(mymatrix$sentimento, mymatrix$ncomentarios)
plot(mymatrix$sentimento, mymatrix$ncomentarios,log="x")
plot(mymatrix$sentimento, mymatrix$ncomentarios,log="y")
plot(mymatrix$ncomentarios,mymatrix$sentimento,log="y")
plot(mymatrix$sentimento, mymatrix$ncomentarios,log="y",xlim=c(0,500))
plot(mymatrix$ncomentarios,mymatrix$sentimento,log="y")
plot(mymatrix$sentimento, mymatrix$ncomentarios,log="y",xlim=c(0,100))
plot(mymatrix$ncomentarios,mymatrix$sentimento,log="y")
plot(mymatrix$sentimento, mymatrix$ncomentarios,log="y",xlim=c(0,100))
plot(mymatrix$ncomentarios,mymatrix$sentimento,log="y", xlim=c(0,500))
subset1 <- mymatrix %>% arrange(sentimento, ncomentarios) %>% tail(1)
subset2 <- mymatrix %>% arrange(sentimento, ncomentarios) %>% head(1)
referencias <- c(subset1$id, subset2$id)
referencias
plot(-14:14,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = 0, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$id==unlist(referencias)[1]),
which(mymatrix$id==unlist(referencias)[2])
)
plot(-14:14,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = -1, y=-10, labels = -1,pos = 4)
plot(-14:14,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = -0.2, y=-10, labels = -1,pos = 4)
plot(-14:14,axes=FALSE,xlab="",ylab="",type="n")
gradient.rect(1,-10,3,10,reds=c(1,0), greens=c(seq(0,1,length=10),seq(1,0,length=10)),blues=c(0,1),gradient="y")
text(x = 0, y=10,  labels = 1,pos = 4)
text(x = -0.3, y=-10, labels = -1,pos = 4)
posReferenciasSentimento <- c(which(mymatrix$id==unlist(referencias)[1]),
which(mymatrix$id==unlist(referencias)[2])
)
pos1 <- posReferenciasSentimento[1]
pos2 <- posReferenciasSentimento[2]
link1 <- mymatrix$links[pos1]
link2 <- mymatrix$links[pos2]
link1
link2
getScreenshot(link1, "post1")
getScreenshot(link2, "post2")
ima <- readJPEG("~/figures_badogue/post2.jpg")
filename1 <- "post1"
workdir <- "figures_badogue"
file.exists(workdir)
workdir <- "/home/cdesantana/figures_badogue"
workdir <- "/home/cdesantana/figures_badogue"
file.exists(workdir)
resolution <- "800x600"
outputfile1 <- file.path(workdir,filename1)
outputfile1
file$Link
link1
link2
command1
outputfile1
command1 = paste("pageres ", link1, " ", resolution, " --format='jpg' --verbose --hide='.page-header' --filename=",outputfile1,sep="")
command1
runApp()
runApp()
runApp()
runApp()
runApp()
referencias
subset1
subset2
referencias
posReferenciasSentimento
mymatrix$sentimento[posReferenciasSentimento]
pos1 <- posReferenciasSentimento[1]
pos1 <- posReferenciasSentimento[1]
pos1
link1 <- mymatrix$links[pos1]
link2 <- mymatrix$links[pos2]
link2
link1
View(file)
length(mymatrix$links)
length(unique(sort(mymatrix$links)))
length(file$Link)
length(unique(sort(file$Link)))
length(unique(sort(as.character(file$Link))))
unique(sort(as.character(file$Link)))
sort(as.character(file$Link))
View(file)
file$Link
file$Link[|]
file$Link[1]
strsplit(file$Link[1],'_')
unlist(strsplit(file$Link[1],'_'))[1]
runApp()
pos1 <- posReferenciasSentimento[1]
pos2 <- posReferenciasSentimento[2]
link1 <- paste("https://pt-br.facebook.com/",mymatrix$id[pos1],sep="")
link2 <- paste("https://pt-br.facebook.com/",mymatrix$id[pos2],sep="")
link2
file$Mídia
View(file)
load("/home/cdesantana/DataSCOUT/Objectiva/BadogueExcel/fb_oauth")
View(file)
getCommentReplies("1119646304834179_1119791431486333",token=fb_oauth)
comm <- getCommentReplies("1119646304834179_1119791431486333",token=fb_oauth)
names(comm)
comm$comment
comm$replies
getPost("1119646304834179",token=fb_oauth)
getPost("1119646304834179",token=fb_oauth)
runApp()
getPost("1119646304834179",token=fb_oauth)
getPost(1119646304834179,token=fb_oauth)
runApp()
runApp()
sessionInfo()
runApp()
runApp()
