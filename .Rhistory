geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,freq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
datas
polaridades
datas
polaridades
which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
length(df_datas)
length(df_datas$datas)
length(freq)
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 0.02
}
return(as.numeric(labelpos))
}
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,freq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 2
}
return(as.numeric(labelpos))
}
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,freq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n))
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>% summarise(freq = 100*n/sum(n))
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>% summarise(100*n/sum(n))
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>% 100*n/sum(n)
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n))
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>% select(freq)
aux <- df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n))
myfreq <- aux$freq
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,myfreq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
myfreq
df_datas
freq <- myfreq
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
polaridades
i<-1
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 2
labelpos
labelpos <- rep(NA,length(datasb))
labelpos
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 2
}
as.numeric(labelpos)
labelpos <- rep(NA,length(datasb))
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[i] <- obsb + 2
}
as.numeric(labelpos)
length(datasb)
i<-1
datasb_ <- datasb[i];
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
obsb
positionobsb
length(positionobsb)
freq
toupper(polaridades) == "POSITIVO"
which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
labelpos
datasb
labelpos <- rep(NA,length(datasb))
labelpos
datas
positionobsb <- which(toupper(polaridades) == "POSITIVO")
positionobsb
labelpos <- rep(NA,length(polaridades=="NEUTRO"))
labelpos
datasb_ <- datasb[i];
positionobsb <- which(toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[i] <- obsb + 2
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[i] <- obsb + 2
}
as.numeric(labelpos)
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[positionobsb] <- obsb + 2
}
as.numeric(labelpos)
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
obsb
positionobsb
myfreq
labelpos <- rep(NA,length(datasb))
labelpos
freq
aux <- df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
filter(toupper(polaridades) == "NEUTRO")
myfreq <- aux$freq
myfreq
freq <- myfreq
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
labelpos[i] <- obsb + 2
}
as.numeric(labelpos)
i<-1
datasb_ <- datasb[i];
positionobsb <- which(toupper(polaridades) == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, freq[positionobsb], 0);
datasb_
positionobsb
positionobsb <- which(datasb == df_datas$datas & toupper(polaridades) == "POSITIVO")
positionobsb <- which(df_datas$datas == datasb & toupper(polaridades) == "POSITIVO")
positionobsb <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positionobsb
datas[positionobsb]
positiondataspolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
positiondata
positiondatapolaridade
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 2
}
as.numeric(labelpos)
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 3
}
return(as.numeric(labelpos))
}
myfreq <- aux$freq
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,myfreq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, 100*length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 3
}
return(as.numeric(labelpos))
}
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,myfreq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 3
}
return(as.numeric(labelpos))
}
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 3
}
return(as.numeric(labelpos))
}
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,myfreq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
getPositionY(df_datas, myfreq)
myfreq
aux <- df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
filter(toupper(polaridades) == "POSITIVO")
myfreq <- aux$freq
freq <- myfreq
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, length(positiondata)/length(positiondatapolaridade), 0);
labelpos[i] <- obsb + 3
}
as.numeric(labelpos)
getPositionY <- function(df_datas, freq){
datas <- df_datas$datas
polaridades <- df_datas$polaridades
datasb <- unique(sort(datas))
labelpos <- rep(NA,length(datasb))
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positiondatapolaridade <- which(datas == datasb_ & toupper(polaridades) == "POSITIVO")
positiondata <- which(datas == datasb_)
obsb <- ifelse(length(positionobsb) > 0, freq, 0);
labelpos[i] <- obsb + 3
}
return(as.numeric(labelpos))
}
df_datas %>%
group_by(datas, polaridades) %>%
summarise (n = n()) %>%
mutate(freq = 100*n / sum(n)) %>%
ggplot() +
geom_bar(position = "stack", stat = "identity", aes(x = datas, y = freq, fill = polaridades)) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual("Polaridade", values = c("Positivo" = ggplotColours(n=3)[2], "Negativo" = ggplotColours(n=3)[1], "Neutro" = ggplotColours(n=3)[3])) +
geom_text(size = 2, col = "white", aes(x = datas, y = ifelse(polaridades=="Positivo",3,ifelse(polaridades=="Negativo",98,getPositionY(df_datas,myfreq))), label = paste(as.character(signif(freq,1)),"%",sep="")));
freq
length(positionobsb)
getPositionY <- function(test){
labelpos <- array(NA,length(test$Polaridade))
labelpos[ which(test$Polaridade == "POSITIVO") ] <- "0.02"
labelpos[ which(test$Polaridade == "NEGATIVO") ] <- "0.98"
datasb <- test$Data[which(test$Polaridade == "NEUTRO")];
posvarb <- which(test$Polaridade == "NEUTRO");
for(i in 1:length(datasb)){
datasb_ <- datasb[i];
positionobsb <- which(test$Data == datasb_ & test$Polaridade == "POSITIVO")
obsb <- ifelse(length(positionobsb) > 0, test$freq[positionobsb], 0);
labelpos[posvarb[i]] <- obsb + 0.02
}
return(as.numeric(labelpos))
}
serietemporalsentimento <- function(file, primeirodia = "2017-07-01", ultimodia = "2017-07-31"){
path_excel_filename <- paste(workdir,excelfilename,sep="/");
prefix <- unlist(strsplit(unlist(strsplit(path_excel_filename,"[.]"))[1],"/"))[8];
amostra <- file
df_datas <- amostra %>%
mutate( Data = dmy_hm(Data) %>%
as.Date() %>%
format("%d/%m/%Y"),
Polaridade = as.factor(toupper(Polaridade))
) %>%
group_by(Data, Polaridade) %>%
summarise(count = n()) %>%
group_by(Data) %>%
mutate(freq = count / sum(count))
p <- ggplot(df_datas, aes(x=dmy(Data), y=freq, fill=Polaridade)) +
geom_bar(position = "stack", stat = "identity") +
scale_x_date(date_breaks = "1 day",
labels = date_format("%d/%m/%Y")) +
theme(text = element_text(size=6), axis.text.x = element_text(angle=90, hjust=1)) +
scale_y_continuous(labels=scales::percent) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_discrete(name="Sentimento") +
coord_cartesian(xlim = c(dmy("01/07/2017"), dmy("31/07/2017"))) +
scale_fill_manual("Sentimentos", values = c("POSITIVO" = ggplotColours(n=4)[2], "NEGATIVO" = ggplotColours(n=4)[1], "NEUTRO" = ggplotColours(n=4)[3], "GOVERNO" = ggplotColours(n=4)[4])) +
geom_text(size = 2, col = "white", aes(x = dmy(Data), y = getPositionY(df_datas), label = paste(as.character(100*signif(df_datas$freq,1)),"%",sep="")));
p
}
serietemporalsentimento(file, "2017/07/01", "2017/07/28")
serietemporalsentimento <- function(file, primeirodia = "2017-07-01", ultimodia = "2017-07-31"){
amostra <- file
df_datas <- amostra %>%
mutate( Data = dmy_hm(Data) %>%
as.Date() %>%
format("%d/%m/%Y"),
Polaridade = as.factor(toupper(Polaridade))
) %>%
group_by(Data, Polaridade) %>%
summarise(count = n()) %>%
group_by(Data) %>%
mutate(freq = count / sum(count))
p <- ggplot(df_datas, aes(x=dmy(Data), y=freq, fill=Polaridade)) +
geom_bar(position = "stack", stat = "identity") +
scale_x_date(date_breaks = "1 day",
labels = date_format("%d/%m/%Y")) +
theme(text = element_text(size=6), axis.text.x = element_text(angle=90, hjust=1)) +
scale_y_continuous(labels=scales::percent) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_discrete(name="Sentimento") +
coord_cartesian(xlim = c(dmy("01/07/2017"), dmy("31/07/2017"))) +
scale_fill_manual("Sentimentos", values = c("POSITIVO" = ggplotColours(n=4)[2], "NEGATIVO" = ggplotColours(n=4)[1], "NEUTRO" = ggplotColours(n=4)[3], "GOVERNO" = ggplotColours(n=4)[4])) +
geom_text(size = 2, col = "white", aes(x = dmy(Data), y = getPositionY(df_datas), label = paste(as.character(100*signif(df_datas$freq,1)),"%",sep="")));
p
}
serietemporalsentimento(file, "2017/07/01", "2017/07/28")
serietemporalsentimento <- function(file){
amostra <- file
df_datas <- amostra %>%
mutate( Data = dmy_hm(Data) %>%
as.Date() %>%
format("%d/%m/%Y"),
Polaridade = as.factor(toupper(Polaridade))
) %>%
group_by(Data, Polaridade) %>%
summarise(count = n()) %>%
group_by(Data) %>%
mutate(freq = count / sum(count))
p <- ggplot(df_datas, aes(x=dmy(Data), y=freq, fill=Polaridade)) +
geom_bar(position = "stack", stat = "identity") +
scale_x_date(date_breaks = "1 day",
labels = date_format("%d/%m/%Y")) +
theme(text = element_text(size=6), axis.text.x = element_text(angle=90, hjust=1)) +
scale_y_continuous(labels=scales::percent) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_discrete(name="Sentimento") +
coord_cartesian(xlim = c(dmy("01/07/2017"), dmy("31/07/2017"))) +
scale_fill_manual("Sentimentos", values = c("POSITIVO" = ggplotColours(n=4)[2], "NEGATIVO" = ggplotColours(n=4)[1], "NEUTRO" = ggplotColours(n=4)[3], "GOVERNO" = ggplotColours(n=4)[4])) +
geom_text(size = 2, col = "white", aes(x = dmy(Data), y = getPositionY(df_datas), label = paste(as.character(100*signif(df_datas$freq,1)),"%",sep="")));
p
}
serietemporalsentimento(file)
df_datas
df_datas$datas
min(df_datas$datas)
max(df_datas$datas)
runApp()
file
amostra <- file
df_datas <- amostra %>%
mutate( Data = dmy_hm(Data) %>%
as.Date() %>%
format("%d/%m/%Y"),
Polaridade = as.factor(toupper(Polaridade))
) %>%
group_by(Data, Polaridade) %>%
summarise(count = n()) %>%
group_by(Data) %>%
mutate(freq = count / sum(count))
primeirodia <- min(df_datas$datas);
ultimodia <- max(df_datas$datas)
names(df_datas)
primeirodia <- min(df_datas$Data);
ultimodia <- max(df_datas$Data)
primeirodia
ultimodia
ggplot(df_datas, aes(x=dmy(Data), y=freq, fill=Polaridade)) +
geom_bar(position = "stack", stat = "identity") +
scale_x_date(date_breaks = "1 day",
labels = date_format("%d/%m/%Y")) +
theme(text = element_text(size=6), axis.text.x = element_text(angle=90, hjust=1)) +
scale_y_continuous(labels=scales::percent) +
labs (title = "") +
labs (x = "", y = "Porcentagem de Posts") +
theme(text = element_text(size=6), axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_discrete(name="Sentimento") +
coord_cartesian(xlim = c(dmy(primeirodia), dmy(ultimodia))) +
scale_fill_manual("Sentimentos", values = c("POSITIVO" = ggplotColours(n=4)[2], "NEGATIVO" = ggplotColours(n=4)[1], "NEUTRO" = ggplotColours(n=4)[3], "GOVERNO" = ggplotColours(n=4)[4])) +
geom_text(size = 2, col = "white", aes(x = dmy(Data), y = getPositionY(df_datas), label = paste(as.character(100*signif(df_datas$freq,1)),"%",sep="")));
runApp()
df_datas
signif(df_datas$freq,2)
signif(df_datas$freq,2)*100
round(df_datas$freq,2)*100
runApp()
?round
runApp()
